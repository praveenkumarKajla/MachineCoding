
/* eslint import/no-cycle: off */

import {
    table,
    autoGeneratedHashKey,
    attribute,
} from "@aws/dynamodb-data-mapper-annotations";

import { DB_CONFIG } from "@config/db_config";

import GlobalSecondaryIndex from "./IndexGlobal";
import { PerIndexOptions, SecondaryIndexOptions } from "@aws/dynamodb-data-mapper";


const { TABLE_NAME_PREFIX } = DB_CONFIG.DATABASE_CONNECTION;

@table(`${TABLE_NAME_PREFIX}menu`)
export default class Menu extends GlobalSecondaryIndex {
    @autoGeneratedHashKey()
    id: string;

    @attribute({
        indexKeyConfigurations: {
            restaurant: "HASH",
        },
    })
    restaurant_id: string; // no need for cuisine as restaurant already has

    @attribute()
    name: string; //Mutton Whopper

    @attribute()
    category: string; //Beverages //"Desserts" //Indian Meals

    @attribute()
    picture: string;

    @attribute()
    description: string; //Flame grilled signature Mutton patty Whopper

    @attribute()
    is_available: boolean;

    @attribute()
    price: number; // 237, 80 etc (rounded off)

    @attribute({
        defaultProvider: () => Date.now()
    })
    created_at: number;

    @attribute()
    updated_at: number;

    public static global_secondary_indices = {
        restaurant: {
          writeCapacityUnits: 2,
          readCapacityUnits: 2,
          type: "global",
          projection: "all",
        } as SecondaryIndexOptions,
    
      } as PerIndexOptions;



}
