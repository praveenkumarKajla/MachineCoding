
/* eslint import/no-cycle: off */

import {
    table,
    autoGeneratedHashKey,
    attribute,
    hashKey,
} from "@aws/dynamodb-data-mapper-annotations";
import { PerIndexOptions, SecondaryIndexOptions } from "@aws/dynamodb-data-mapper";

import { DB_CONFIG } from "@config/db_config";

import GlobalSecondaryIndex from "./IndexGlobal";


export interface ItemDetails {
    id: string;
    quantity: number;
    price: number; //final price paid
}

const { TABLE_NAME_PREFIX } = DB_CONFIG.DATABASE_CONNECTION;

@table(`${TABLE_NAME_PREFIX}order`)
export default class Order extends GlobalSecondaryIndex {
    @autoGeneratedHashKey()
    id: string;

    @attribute({
        indexKeyConfigurations: {
            user: "HASH",
        },
    })
    user_id: string;

    @attribute({
        indexKeyConfigurations: {
            restaurant: "HASH",
        },
    })
    restaurant_id: string;

    @attribute()
    items: Array<ItemDetails>; // menu items

    @attribute()
    coupon_applied: string;

    @attribute()
    total: number;

    @attribute({
        indexKeyConfigurations: {
            user: "RANGE",
        },
        defaultProvider: () => Date.now()
    })
    ordered_at: number;

    @attribute()
    delivered_at: number;


    public static global_secondary_indices = {
        restaurant: {
          writeCapacityUnits: 2,
          readCapacityUnits: 2,
          type: "global",
          projection: "all",
        } as SecondaryIndexOptions,

        user: {
            writeCapacityUnits: 2,
            readCapacityUnits: 2,
            type: "global",
            projection: "all",
          } as SecondaryIndexOptions
    
      } as PerIndexOptions;



}
