

import { DB_CONFIG } from "@config/db_config";

import GlobalSecondaryIndex from "./IndexGlobal";

import { attribute, autoGeneratedHashKey, hashKey, table } from "@aws/dynamodb-data-mapper-annotations";
import { Location } from "@typeroot/models";
import { PerIndexOptions, SecondaryIndexOptions } from "@aws/dynamodb-data-mapper";




const { TABLE_NAME_PREFIX } = DB_CONFIG.DATABASE_CONNECTION;
export enum RideStatus {
    BOOKED = 10,
    IN_PROGRESS = 20,
    FINISHED = 30,
    CANCELLED = 40
}


@table(`${TABLE_NAME_PREFIX}ride`)
export class Ride extends GlobalSecondaryIndex {

    @autoGeneratedHashKey()
    id: string;

    @attribute()
    driver_id: string;

    @attribute({
        indexKeyConfigurations: {
            rider: "HASH",
        },
    })
    rider_id: string;

    @attribute()
    source: Location

    @attribute()
    destination: Location;

    @attribute(({ defaultProvider: () => RideStatus.BOOKED }))
    status: RideStatus;

    @attribute()
    fee: number;

    @attribute({
        defaultProvider: () => Date.now(),
        indexKeyConfigurations: {
            rider: "RANGE",
        },
    })
    created_at: number;

    static get table_name() {
        return `${TABLE_NAME_PREFIX}trip`
    }

    public static global_secondary_indices = {
        rider: {
            writeCapacityUnits: 2,
            readCapacityUnits: 2,
            type: "global",
            projection: "all",
        } as SecondaryIndexOptions,

    } as PerIndexOptions;
}