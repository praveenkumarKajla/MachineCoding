/* eslint import/no-cycle: off */

import {
  table,
  attribute,
  autoGeneratedHashKey,
} from "@aws/dynamodb-data-mapper-annotations";
import { PerIndexOptions, SecondaryIndexOptions } from "@aws/dynamodb-data-mapper";

import { DB_CONFIG } from "../config/db_config";

import GlobalSecondaryIndex from "./IndexGlobal";

import { SPLIT_TYPE, Repayment } from "@typeroot/models"
import { Share } from "@typeroot/payload";

const { TABLE_NAME_PREFIX } = DB_CONFIG.DATABASE_CONNECTION;

@table(`${TABLE_NAME_PREFIX}expense`)
export default class Expense extends GlobalSecondaryIndex {
  @autoGeneratedHashKey()
  ID: string;

  @attribute({
    indexKeyConfigurations: {
      group: "HASH",
    },
  })
  group_id: string;

  @attribute()
  amount: number;

  @attribute()
  title: string;

  @attribute()
  note: string;

  @attribute()
  shares: Array<Share>

  @attribute()
  split_type: SPLIT_TYPE;

  @attribute({ defaultProvider: () => false })
  settled: boolean;


  @attribute()
  created_by: string;

  @attribute({
    defaultProvider: () => Date.now(),
    indexKeyConfigurations: {
      group: "RANGE",
    },
  })
  created_at: number;

  @attribute()
  updated_at: number;


  public static global_secondary_indices = {
    group: {
      writeCapacityUnits: 2,
      readCapacityUnits: 2,
      type: "global",
      projection: "all",
    } as SecondaryIndexOptions,

  } as PerIndexOptions;
}
